{
  // A general quest pool for transformation-related quests

  "ends" : [
    [0.15, "sbq_change_species"],
    [0.25, "sbq_revert_species"]
  ],

  "quests" : {
    "sbq_change_species" : {
      "templateId" : "sbq_change_species.generated",
      "difficulty" : 0.25,
      "participants" : {
        "questGiver" : {
          "turnInQuest" : true
        },
        "target" : {
          "critical" : true
        }
      },

      "managerPlugins" : [{
        "script" : "/scripts/quest/manager/species_articles.lua",
        "pluginClass" : "SpeciesArticles",
        "pluginConfig" : {
          "speciesParameter" : "newSpecies",
          "articleParameter" : "article"
        }
      }],

      "preconditions" : [
		// Make sure quest giver can transform
		["sbq_canTransformSpecies", "questGiver"],
        // Store target's species as variable "newSpecies"
        ["sbq_species", "target", "newSpecies"],
        // If target's species is different from the quest giver's...
        ["!sbq_species", "questGiver", "newSpecies"],
        // ...and it's not the quest giver's original species...
        ["!species", "questGiver", "newSpecies"],

        // article can't be nil, but the SpeciesArticles plugin will replace it
        ["sbq_dummy", "article"],

        // TODO - Consider adding the "likes" requirement
        ["likes", "questGiver", "target"],

        // Target is an NPC and not the quest giver
        ["isNpc", "target"],
        ["!=", "target", "questGiver"],
        // Neither the target nor the quest giver are OCs
        ["!sbq_isOC", "target"],
        ["!sbq_isOC", "questGiver"]
      ],
      "postconditions" : [
        // The quest giver is now a <newSpecies>. Other quests may be able to play off of it in a chain.
        ["sbq_species", "questGiver", "newSpecies"]
      ]
    },

    "sbq_revert_species" : {
      "templateId" : "sbq_revert_species.generated",
      "difficulty" : 0.2,
      "participants" : {
        "questGiver" : {
          "turnInQuest" : true
        }
      },

      "managerPlugins" : [
        {
          "script" : "/scripts/quest/manager/species_articles.lua",
          "pluginClass" : "SpeciesArticles",
          "pluginConfig" : {
            "speciesParameter" : "originalSpecies",
            "articleParameter" : "originalArticle"
          }
        },
        {
          "script" : "/scripts/quest/manager/species_articles.lua",
          "pluginClass" : "SpeciesArticles",
          "pluginConfig" : {
            "speciesParameter" : "currentSpecies",
            "articleParameter" : "currentArticle"
          }
        }
      ],

      "preconditions" : [
		// Make sure quest giver can transform
		["sbq_canTransformSpecies", "questGiver"],
        // Store quest giver's original and current species
        ["species", "questGiver", "originalSpecies"],
        ["sbq_species", "questGiver", "currentSpecies"],
        // Quest giver is not in their original form
        ["!=", "originalSpecies", "currentSpecies"],

        // Articles can't be nil, but will be replaced
        ["sbq_dummy", "originalArticle"],
        ["sbq_dummy", "currentArticle"]
      ],
      "postconditions" : [
        // The quest giver is now an <originalSpecies>. Other quests can play off of it in a chain.
        ["sbq_species", "questGiver", "originalSpecies"]
      ],
      // Not sure what these are actually for. They seem to be treated more or less like postconditions
      "objectives" : [
        ["sbq_species", "questGiver", "originalSpecies"]
      ]
    }
  }

}
